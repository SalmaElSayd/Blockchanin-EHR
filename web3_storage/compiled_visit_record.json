{"contracts": {"VisitRecord.sol": {"VisitRecord": {"abi": [{"inputs": [{"internalType": "bytes", "name": "_visitData", "type": "bytes"}, {"internalType": "string", "name": "_previousRecordHash", "type": "string"}], "stateMutability": "nonpayable", "type": "constructor"}, {"inputs": [], "name": "readRecord", "outputs": [{"components": [{"internalType": "bytes", "name": "visitData", "type": "bytes"}, {"internalType": "string", "name": "previousRecordHash", "type": "string"}], "internalType": "struct VisitRecord.Visit", "name": "", "type": "tuple"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes", "name": "_visitData", "type": "bytes"}, {"internalType": "string", "name": "_previousRecordHash", "type": "string"}], "name": "store", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "evm": {"bytecode": {"generatedSources": [{"ast": {"nodeType": "YulBlock", "src": "0:3964:1", "statements": [{"body": {"nodeType": "YulBlock", "src": "101:257:1", "statements": [{"nodeType": "YulAssignment", "src": "111:73:1", "value": {"arguments": [{"arguments": [{"name": "length", "nodeType": "YulIdentifier", "src": "176:6:1"}], "functionName": {"name": "array_allocation_size_t_bytes_memory_ptr", "nodeType": "YulIdentifier", "src": "135:40:1"}, "nodeType": "YulFunctionCall", "src": "135:48:1"}], "functionName": {"name": "allocateMemory", "nodeType": "YulIdentifier", "src": "120:14:1"}, "nodeType": "YulFunctionCall", "src": "120:64:1"}, "variableNames": [{"name": "array", "nodeType": "YulIdentifier", "src": "111:5:1"}]}, {"expression": {"arguments": [{"name": "array", "nodeType": "YulIdentifier", "src": "200:5:1"}, {"name": "length", "nodeType": "YulIdentifier", "src": "207:6:1"}], "functionName": {"name": "mstore", "nodeType": "YulIdentifier", "src": "193:6:1"}, "nodeType": "YulFunctionCall", "src": "193:21:1"}, "nodeType": "YulExpressionStatement", "src": "193:21:1"}, {"nodeType": "YulVariableDeclaration", "src": "223:27:1", "value": {"arguments": [{"name": "array", "nodeType": "YulIdentifier", "src": "238:5:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "245:4:1", "type": "", "value": "0x20"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "234:3:1"}, "nodeType": "YulFunctionCall", "src": "234:16:1"}, "variables": [{"name": "dst", "nodeType": "YulTypedName", "src": "227:3:1", "type": ""}]}, {"body": {"nodeType": "YulBlock", "src": "288:16:1", "statements": [{"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "297:1:1", "type": "", "value": "0"}, {"kind": "number", "nodeType": "YulLiteral", "src": "300:1:1", "type": "", "value": "0"}], "functionName": {"name": "revert", "nodeType": "YulIdentifier", "src": "290:6:1"}, "nodeType": "YulFunctionCall", "src": "290:12:1"}, "nodeType": "YulExpressionStatement", "src": "290:12:1"}]}, "condition": {"arguments": [{"arguments": [{"name": "src", "nodeType": "YulIdentifier", "src": "269:3:1"}, {"name": "length", "nodeType": "YulIdentifier", "src": "274:6:1"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "265:3:1"}, "nodeType": "YulFunctionCall", "src": "265:16:1"}, {"name": "end", "nodeType": "YulIdentifier", "src": "283:3:1"}], "functionName": {"name": "gt", "nodeType": "YulIdentifier", "src": "262:2:1"}, "nodeType": "YulFunctionCall", "src": "262:25:1"}, "nodeType": "YulIf", "src": "259:2:1"}, {"expression": {"arguments": [{"name": "src", "nodeType": "YulIdentifier", "src": "335:3:1"}, {"name": "dst", "nodeType": "YulIdentifier", "src": "340:3:1"}, {"name": "length", "nodeType": "YulIdentifier", "src": "345:6:1"}], "functionName": {"name": "copy_memory_to_memory", "nodeType": "YulIdentifier", "src": "313:21:1"}, "nodeType": "YulFunctionCall", "src": "313:39:1"}, "nodeType": "YulExpressionStatement", "src": "313:39:1"}]}, "name": "abi_decode_available_length_t_bytes_memory_ptr_fromMemory", "nodeType": "YulFunctionDefinition", "parameters": [{"name": "src", "nodeType": "YulTypedName", "src": "74:3:1", "type": ""}, {"name": "length", "nodeType": "YulTypedName", "src": "79:6:1", "type": ""}, {"name": "end", "nodeType": "YulTypedName", "src": "87:3:1", "type": ""}], "returnVariables": [{"name": "array", "nodeType": "YulTypedName", "src": "95:5:1", "type": ""}], "src": "7:351:1"}, {"body": {"nodeType": "YulBlock", "src": "459:258:1", "statements": [{"nodeType": "YulAssignment", "src": "469:74:1", "value": {"arguments": [{"arguments": [{"name": "length", "nodeType": "YulIdentifier", "src": "535:6:1"}], "functionName": {"name": "array_allocation_size_t_string_memory_ptr", "nodeType": "YulIdentifier", "src": "493:41:1"}, "nodeType": "YulFunctionCall", "src": "493:49:1"}], "functionName": {"name": "allocateMemory", "nodeType": "YulIdentifier", "src": "478:14:1"}, "nodeType": "YulFunctionCall", "src": "478:65:1"}, "variableNames": [{"name": "array", "nodeType": "YulIdentifier", "src": "469:5:1"}]}, {"expression": {"arguments": [{"name": "array", "nodeType": "YulIdentifier", "src": "559:5:1"}, {"name": "length", "nodeType": "YulIdentifier", "src": "566:6:1"}], "functionName": {"name": "mstore", "nodeType": "YulIdentifier", "src": "552:6:1"}, "nodeType": "YulFunctionCall", "src": "552:21:1"}, "nodeType": "YulExpressionStatement", "src": "552:21:1"}, {"nodeType": "YulVariableDeclaration", "src": "582:27:1", "value": {"arguments": [{"name": "array", "nodeType": "YulIdentifier", "src": "597:5:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "604:4:1", "type": "", "value": "0x20"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "593:3:1"}, "nodeType": "YulFunctionCall", "src": "593:16:1"}, "variables": [{"name": "dst", "nodeType": "YulTypedName", "src": "586:3:1", "type": ""}]}, {"body": {"nodeType": "YulBlock", "src": "647:16:1", "statements": [{"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "656:1:1", "type": "", "value": "0"}, {"kind": "number", "nodeType": "YulLiteral", "src": "659:1:1", "type": "", "value": "0"}], "functionName": {"name": "revert", "nodeType": "YulIdentifier", "src": "649:6:1"}, "nodeType": "YulFunctionCall", "src": "649:12:1"}, "nodeType": "YulExpressionStatement", "src": "649:12:1"}]}, "condition": {"arguments": [{"arguments": [{"name": "src", "nodeType": "YulIdentifier", "src": "628:3:1"}, {"name": "length", "nodeType": "YulIdentifier", "src": "633:6:1"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "624:3:1"}, "nodeType": "YulFunctionCall", "src": "624:16:1"}, {"name": "end", "nodeType": "YulIdentifier", "src": "642:3:1"}], "functionName": {"name": "gt", "nodeType": "YulIdentifier", "src": "621:2:1"}, "nodeType": "YulFunctionCall", "src": "621:25:1"}, "nodeType": "YulIf", "src": "618:2:1"}, {"expression": {"arguments": [{"name": "src", "nodeType": "YulIdentifier", "src": "694:3:1"}, {"name": "dst", "nodeType": "YulIdentifier", "src": "699:3:1"}, {"name": "length", "nodeType": "YulIdentifier", "src": "704:6:1"}], "functionName": {"name": "copy_memory_to_memory", "nodeType": "YulIdentifier", "src": "672:21:1"}, "nodeType": "YulFunctionCall", "src": "672:39:1"}, "nodeType": "YulExpressionStatement", "src": "672:39:1"}]}, "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory", "nodeType": "YulFunctionDefinition", "parameters": [{"name": "src", "nodeType": "YulTypedName", "src": "432:3:1", "type": ""}, {"name": "length", "nodeType": "YulTypedName", "src": "437:6:1", "type": ""}, {"name": "end", "nodeType": "YulTypedName", "src": "445:3:1", "type": ""}], "returnVariables": [{"name": "array", "nodeType": "YulTypedName", "src": "453:5:1", "type": ""}], "src": "364:353:1"}, {"body": {"nodeType": "YulBlock", "src": "808:214:1", "statements": [{"body": {"nodeType": "YulBlock", "src": "857:16:1", "statements": [{"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "866:1:1", "type": "", "value": "0"}, {"kind": "number", "nodeType": "YulLiteral", "src": "869:1:1", "type": "", "value": "0"}], "functionName": {"name": "revert", "nodeType": "YulIdentifier", "src": "859:6:1"}, "nodeType": "YulFunctionCall", "src": "859:12:1"}, "nodeType": "YulExpressionStatement", "src": "859:12:1"}]}, "condition": {"arguments": [{"arguments": [{"arguments": [{"name": "offset", "nodeType": "YulIdentifier", "src": "836:6:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "844:4:1", "type": "", "value": "0x1f"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "832:3:1"}, "nodeType": "YulFunctionCall", "src": "832:17:1"}, {"name": "end", "nodeType": "YulIdentifier", "src": "851:3:1"}], "functionName": {"name": "slt", "nodeType": "YulIdentifier", "src": "828:3:1"}, "nodeType": "YulFunctionCall", "src": "828:27:1"}], "functionName": {"name": "iszero", "nodeType": "YulIdentifier", "src": "821:6:1"}, "nodeType": "YulFunctionCall", "src": "821:35:1"}, "nodeType": "YulIf", "src": "818:2:1"}, {"nodeType": "YulVariableDeclaration", "src": "882:27:1", "value": {"arguments": [{"name": "offset", "nodeType": "YulIdentifier", "src": "902:6:1"}], "functionName": {"name": "mload", "nodeType": "YulIdentifier", "src": "896:5:1"}, "nodeType": "YulFunctionCall", "src": "896:13:1"}, "variables": [{"name": "length", "nodeType": "YulTypedName", "src": "886:6:1", "type": ""}]}, {"nodeType": "YulAssignment", "src": "918:98:1", "value": {"arguments": [{"arguments": [{"name": "offset", "nodeType": "YulIdentifier", "src": "989:6:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "997:4:1", "type": "", "value": "0x20"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "985:3:1"}, "nodeType": "YulFunctionCall", "src": "985:17:1"}, {"name": "length", "nodeType": "YulIdentifier", "src": "1004:6:1"}, {"name": "end", "nodeType": "YulIdentifier", "src": "1012:3:1"}], "functionName": {"name": "abi_decode_available_length_t_bytes_memory_ptr_fromMemory", "nodeType": "YulIdentifier", "src": "927:57:1"}, "nodeType": "YulFunctionCall", "src": "927:89:1"}, "variableNames": [{"name": "array", "nodeType": "YulIdentifier", "src": "918:5:1"}]}]}, "name": "abi_decode_t_bytes_memory_ptr_fromMemory", "nodeType": "YulFunctionDefinition", "parameters": [{"name": "offset", "nodeType": "YulTypedName", "src": "786:6:1", "type": ""}, {"name": "end", "nodeType": "YulTypedName", "src": "794:3:1", "type": ""}], "returnVariables": [{"name": "array", "nodeType": "YulTypedName", "src": "802:5:1", "type": ""}], "src": "736:286:1"}, {"body": {"nodeType": "YulBlock", "src": "1115:215:1", "statements": [{"body": {"nodeType": "YulBlock", "src": "1164:16:1", "statements": [{"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "1173:1:1", "type": "", "value": "0"}, {"kind": "number", "nodeType": "YulLiteral", "src": "1176:1:1", "type": "", "value": "0"}], "functionName": {"name": "revert", "nodeType": "YulIdentifier", "src": "1166:6:1"}, "nodeType": "YulFunctionCall", "src": "1166:12:1"}, "nodeType": "YulExpressionStatement", "src": "1166:12:1"}]}, "condition": {"arguments": [{"arguments": [{"arguments": [{"name": "offset", "nodeType": "YulIdentifier", "src": "1143:6:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "1151:4:1", "type": "", "value": "0x1f"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "1139:3:1"}, "nodeType": "YulFunctionCall", "src": "1139:17:1"}, {"name": "end", "nodeType": "YulIdentifier", "src": "1158:3:1"}], "functionName": {"name": "slt", "nodeType": "YulIdentifier", "src": "1135:3:1"}, "nodeType": "YulFunctionCall", "src": "1135:27:1"}], "functionName": {"name": "iszero", "nodeType": "YulIdentifier", "src": "1128:6:1"}, "nodeType": "YulFunctionCall", "src": "1128:35:1"}, "nodeType": "YulIf", "src": "1125:2:1"}, {"nodeType": "YulVariableDeclaration", "src": "1189:27:1", "value": {"arguments": [{"name": "offset", "nodeType": "YulIdentifier", "src": "1209:6:1"}], "functionName": {"name": "mload", "nodeType": "YulIdentifier", "src": "1203:5:1"}, "nodeType": "YulFunctionCall", "src": "1203:13:1"}, "variables": [{"name": "length", "nodeType": "YulTypedName", "src": "1193:6:1", "type": ""}]}, {"nodeType": "YulAssignment", "src": "1225:99:1", "value": {"arguments": [{"arguments": [{"name": "offset", "nodeType": "YulIdentifier", "src": "1297:6:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "1305:4:1", "type": "", "value": "0x20"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "1293:3:1"}, "nodeType": "YulFunctionCall", "src": "1293:17:1"}, {"name": "length", "nodeType": "YulIdentifier", "src": "1312:6:1"}, {"name": "end", "nodeType": "YulIdentifier", "src": "1320:3:1"}], "functionName": {"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory", "nodeType": "YulIdentifier", "src": "1234:58:1"}, "nodeType": "YulFunctionCall", "src": "1234:90:1"}, "variableNames": [{"name": "array", "nodeType": "YulIdentifier", "src": "1225:5:1"}]}]}, "name": "abi_decode_t_string_memory_ptr_fromMemory", "nodeType": "YulFunctionDefinition", "parameters": [{"name": "offset", "nodeType": "YulTypedName", "src": "1093:6:1", "type": ""}, {"name": "end", "nodeType": "YulTypedName", "src": "1101:3:1", "type": ""}], "returnVariables": [{"name": "array", "nodeType": "YulTypedName", "src": "1109:5:1", "type": ""}], "src": "1042:288:1"}, {"body": {"nodeType": "YulBlock", "src": "1449:537:1", "statements": [{"body": {"nodeType": "YulBlock", "src": "1495:16:1", "statements": [{"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "1504:1:1", "type": "", "value": "0"}, {"kind": "number", "nodeType": "YulLiteral", "src": "1507:1:1", "type": "", "value": "0"}], "functionName": {"name": "revert", "nodeType": "YulIdentifier", "src": "1497:6:1"}, "nodeType": "YulFunctionCall", "src": "1497:12:1"}, "nodeType": "YulExpressionStatement", "src": "1497:12:1"}]}, "condition": {"arguments": [{"arguments": [{"name": "dataEnd", "nodeType": "YulIdentifier", "src": "1470:7:1"}, {"name": "headStart", "nodeType": "YulIdentifier", "src": "1479:9:1"}], "functionName": {"name": "sub", "nodeType": "YulIdentifier", "src": "1466:3:1"}, "nodeType": "YulFunctionCall", "src": "1466:23:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "1491:2:1", "type": "", "value": "64"}], "functionName": {"name": "slt", "nodeType": "YulIdentifier", "src": "1462:3:1"}, "nodeType": "YulFunctionCall", "src": "1462:32:1"}, "nodeType": "YulIf", "src": "1459:2:1"}, {"nodeType": "YulBlock", "src": "1521:223:1", "statements": [{"nodeType": "YulVariableDeclaration", "src": "1536:38:1", "value": {"arguments": [{"arguments": [{"name": "headStart", "nodeType": "YulIdentifier", "src": "1560:9:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "1571:1:1", "type": "", "value": "0"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "1556:3:1"}, "nodeType": "YulFunctionCall", "src": "1556:17:1"}], "functionName": {"name": "mload", "nodeType": "YulIdentifier", "src": "1550:5:1"}, "nodeType": "YulFunctionCall", "src": "1550:24:1"}, "variables": [{"name": "offset", "nodeType": "YulTypedName", "src": "1540:6:1", "type": ""}]}, {"body": {"nodeType": "YulBlock", "src": "1621:16:1", "statements": [{"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "1630:1:1", "type": "", "value": "0"}, {"kind": "number", "nodeType": "YulLiteral", "src": "1633:1:1", "type": "", "value": "0"}], "functionName": {"name": "revert", "nodeType": "YulIdentifier", "src": "1623:6:1"}, "nodeType": "YulFunctionCall", "src": "1623:12:1"}, "nodeType": "YulExpressionStatement", "src": "1623:12:1"}]}, "condition": {"arguments": [{"name": "offset", "nodeType": "YulIdentifier", "src": "1593:6:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "1601:18:1", "type": "", "value": "0xffffffffffffffff"}], "functionName": {"name": "gt", "nodeType": "YulIdentifier", "src": "1590:2:1"}, "nodeType": "YulFunctionCall", "src": "1590:30:1"}, "nodeType": "YulIf", "src": "1587:2:1"}, {"nodeType": "YulAssignment", "src": "1651:83:1", "value": {"arguments": [{"arguments": [{"name": "headStart", "nodeType": "YulIdentifier", "src": "1706:9:1"}, {"name": "offset", "nodeType": "YulIdentifier", "src": "1717:6:1"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "1702:3:1"}, "nodeType": "YulFunctionCall", "src": "1702:22:1"}, {"name": "dataEnd", "nodeType": "YulIdentifier", "src": "1726:7:1"}], "functionName": {"name": "abi_decode_t_bytes_memory_ptr_fromMemory", "nodeType": "YulIdentifier", "src": "1661:40:1"}, "nodeType": "YulFunctionCall", "src": "1661:73:1"}, "variableNames": [{"name": "value0", "nodeType": "YulIdentifier", "src": "1651:6:1"}]}]}, {"nodeType": "YulBlock", "src": "1754:225:1", "statements": [{"nodeType": "YulVariableDeclaration", "src": "1769:39:1", "value": {"arguments": [{"arguments": [{"name": "headStart", "nodeType": "YulIdentifier", "src": "1793:9:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "1804:2:1", "type": "", "value": "32"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "1789:3:1"}, "nodeType": "YulFunctionCall", "src": "1789:18:1"}], "functionName": {"name": "mload", "nodeType": "YulIdentifier", "src": "1783:5:1"}, "nodeType": "YulFunctionCall", "src": "1783:25:1"}, "variables": [{"name": "offset", "nodeType": "YulTypedName", "src": "1773:6:1", "type": ""}]}, {"body": {"nodeType": "YulBlock", "src": "1855:16:1", "statements": [{"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "1864:1:1", "type": "", "value": "0"}, {"kind": "number", "nodeType": "YulLiteral", "src": "1867:1:1", "type": "", "value": "0"}], "functionName": {"name": "revert", "nodeType": "YulIdentifier", "src": "1857:6:1"}, "nodeType": "YulFunctionCall", "src": "1857:12:1"}, "nodeType": "YulExpressionStatement", "src": "1857:12:1"}]}, "condition": {"arguments": [{"name": "offset", "nodeType": "YulIdentifier", "src": "1827:6:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "1835:18:1", "type": "", "value": "0xffffffffffffffff"}], "functionName": {"name": "gt", "nodeType": "YulIdentifier", "src": "1824:2:1"}, "nodeType": "YulFunctionCall", "src": "1824:30:1"}, "nodeType": "YulIf", "src": "1821:2:1"}, {"nodeType": "YulAssignment", "src": "1885:84:1", "value": {"arguments": [{"arguments": [{"name": "headStart", "nodeType": "YulIdentifier", "src": "1941:9:1"}, {"name": "offset", "nodeType": "YulIdentifier", "src": "1952:6:1"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "1937:3:1"}, "nodeType": "YulFunctionCall", "src": "1937:22:1"}, {"name": "dataEnd", "nodeType": "YulIdentifier", "src": "1961:7:1"}], "functionName": {"name": "abi_decode_t_string_memory_ptr_fromMemory", "nodeType": "YulIdentifier", "src": "1895:41:1"}, "nodeType": "YulFunctionCall", "src": "1895:74:1"}, "variableNames": [{"name": "value1", "nodeType": "YulIdentifier", "src": "1885:6:1"}]}]}]}, "name": "abi_decode_tuple_t_bytes_memory_ptrt_string_memory_ptr_fromMemory", "nodeType": "YulFunctionDefinition", "parameters": [{"name": "headStart", "nodeType": "YulTypedName", "src": "1411:9:1", "type": ""}, {"name": "dataEnd", "nodeType": "YulTypedName", "src": "1422:7:1", "type": ""}], "returnVariables": [{"name": "value0", "nodeType": "YulTypedName", "src": "1434:6:1", "type": ""}, {"name": "value1", "nodeType": "YulTypedName", "src": "1442:6:1", "type": ""}], "src": "1336:650:1"}, {"body": {"nodeType": "YulBlock", "src": "2032:243:1", "statements": [{"nodeType": "YulAssignment", "src": "2042:19:1", "value": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "2058:2:1", "type": "", "value": "64"}], "functionName": {"name": "mload", "nodeType": "YulIdentifier", "src": "2052:5:1"}, "nodeType": "YulFunctionCall", "src": "2052:9:1"}, "variableNames": [{"name": "memPtr", "nodeType": "YulIdentifier", "src": "2042:6:1"}]}, {"nodeType": "YulVariableDeclaration", "src": "2070:35:1", "value": {"arguments": [{"name": "memPtr", "nodeType": "YulIdentifier", "src": "2092:6:1"}, {"name": "size", "nodeType": "YulIdentifier", "src": "2100:4:1"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "2088:3:1"}, "nodeType": "YulFunctionCall", "src": "2088:17:1"}, "variables": [{"name": "newFreePtr", "nodeType": "YulTypedName", "src": "2074:10:1", "type": ""}]}, {"body": {"nodeType": "YulBlock", "src": "2216:22:1", "statements": [{"expression": {"arguments": [], "functionName": {"name": "panic_error_0x41", "nodeType": "YulIdentifier", "src": "2218:16:1"}, "nodeType": "YulFunctionCall", "src": "2218:18:1"}, "nodeType": "YulExpressionStatement", "src": "2218:18:1"}]}, "condition": {"arguments": [{"arguments": [{"name": "newFreePtr", "nodeType": "YulIdentifier", "src": "2159:10:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "2171:18:1", "type": "", "value": "0xffffffffffffffff"}], "functionName": {"name": "gt", "nodeType": "YulIdentifier", "src": "2156:2:1"}, "nodeType": "YulFunctionCall", "src": "2156:34:1"}, {"arguments": [{"name": "newFreePtr", "nodeType": "YulIdentifier", "src": "2195:10:1"}, {"name": "memPtr", "nodeType": "YulIdentifier", "src": "2207:6:1"}], "functionName": {"name": "lt", "nodeType": "YulIdentifier", "src": "2192:2:1"}, "nodeType": "YulFunctionCall", "src": "2192:22:1"}], "functionName": {"name": "or", "nodeType": "YulIdentifier", "src": "2153:2:1"}, "nodeType": "YulFunctionCall", "src": "2153:62:1"}, "nodeType": "YulIf", "src": "2150:2:1"}, {"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "2254:2:1", "type": "", "value": "64"}, {"name": "newFreePtr", "nodeType": "YulIdentifier", "src": "2258:10:1"}], "functionName": {"name": "mstore", "nodeType": "YulIdentifier", "src": "2247:6:1"}, "nodeType": "YulFunctionCall", "src": "2247:22:1"}, "nodeType": "YulExpressionStatement", "src": "2247:22:1"}]}, "name": "allocateMemory", "nodeType": "YulFunctionDefinition", "parameters": [{"name": "size", "nodeType": "YulTypedName", "src": "2016:4:1", "type": ""}], "returnVariables": [{"name": "memPtr", "nodeType": "YulTypedName", "src": "2025:6:1", "type": ""}], "src": "1992:283:1"}, {"body": {"nodeType": "YulBlock", "src": "2347:265:1", "statements": [{"body": {"nodeType": "YulBlock", "src": "2452:22:1", "statements": [{"expression": {"arguments": [], "functionName": {"name": "panic_error_0x41", "nodeType": "YulIdentifier", "src": "2454:16:1"}, "nodeType": "YulFunctionCall", "src": "2454:18:1"}, "nodeType": "YulExpressionStatement", "src": "2454:18:1"}]}, "condition": {"arguments": [{"name": "length", "nodeType": "YulIdentifier", "src": "2424:6:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "2432:18:1", "type": "", "value": "0xffffffffffffffff"}], "functionName": {"name": "gt", "nodeType": "YulIdentifier", "src": "2421:2:1"}, "nodeType": "YulFunctionCall", "src": "2421:30:1"}, "nodeType": "YulIf", "src": "2418:2:1"}, {"nodeType": "YulAssignment", "src": "2504:41:1", "value": {"arguments": [{"arguments": [{"name": "length", "nodeType": "YulIdentifier", "src": "2520:6:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "2528:4:1", "type": "", "value": "0x1f"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "2516:3:1"}, "nodeType": "YulFunctionCall", "src": "2516:17:1"}, {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "2539:4:1", "type": "", "value": "0x1f"}], "functionName": {"name": "not", "nodeType": "YulIdentifier", "src": "2535:3:1"}, "nodeType": "YulFunctionCall", "src": "2535:9:1"}], "functionName": {"name": "and", "nodeType": "YulIdentifier", "src": "2512:3:1"}, "nodeType": "YulFunctionCall", "src": "2512:33:1"}, "variableNames": [{"name": "size", "nodeType": "YulIdentifier", "src": "2504:4:1"}]}, {"nodeType": "YulAssignment", "src": "2582:23:1", "value": {"arguments": [{"name": "size", "nodeType": "YulIdentifier", "src": "2594:4:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "2600:4:1", "type": "", "value": "0x20"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "2590:3:1"}, "nodeType": "YulFunctionCall", "src": "2590:15:1"}, "variableNames": [{"name": "size", "nodeType": "YulIdentifier", "src": "2582:4:1"}]}]}, "name": "array_allocation_size_t_bytes_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{"name": "length", "nodeType": "YulTypedName", "src": "2331:6:1", "type": ""}], "returnVariables": [{"name": "size", "nodeType": "YulTypedName", "src": "2342:4:1", "type": ""}], "src": "2281:331:1"}, {"body": {"nodeType": "YulBlock", "src": "2685:265:1", "statements": [{"body": {"nodeType": "YulBlock", "src": "2790:22:1", "statements": [{"expression": {"arguments": [], "functionName": {"name": "panic_error_0x41", "nodeType": "YulIdentifier", "src": "2792:16:1"}, "nodeType": "YulFunctionCall", "src": "2792:18:1"}, "nodeType": "YulExpressionStatement", "src": "2792:18:1"}]}, "condition": {"arguments": [{"name": "length", "nodeType": "YulIdentifier", "src": "2762:6:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "2770:18:1", "type": "", "value": "0xffffffffffffffff"}], "functionName": {"name": "gt", "nodeType": "YulIdentifier", "src": "2759:2:1"}, "nodeType": "YulFunctionCall", "src": "2759:30:1"}, "nodeType": "YulIf", "src": "2756:2:1"}, {"nodeType": "YulAssignment", "src": "2842:41:1", "value": {"arguments": [{"arguments": [{"name": "length", "nodeType": "YulIdentifier", "src": "2858:6:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "2866:4:1", "type": "", "value": "0x1f"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "2854:3:1"}, "nodeType": "YulFunctionCall", "src": "2854:17:1"}, {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "2877:4:1", "type": "", "value": "0x1f"}], "functionName": {"name": "not", "nodeType": "YulIdentifier", "src": "2873:3:1"}, "nodeType": "YulFunctionCall", "src": "2873:9:1"}], "functionName": {"name": "and", "nodeType": "YulIdentifier", "src": "2850:3:1"}, "nodeType": "YulFunctionCall", "src": "2850:33:1"}, "variableNames": [{"name": "size", "nodeType": "YulIdentifier", "src": "2842:4:1"}]}, {"nodeType": "YulAssignment", "src": "2920:23:1", "value": {"arguments": [{"name": "size", "nodeType": "YulIdentifier", "src": "2932:4:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "2938:4:1", "type": "", "value": "0x20"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "2928:3:1"}, "nodeType": "YulFunctionCall", "src": "2928:15:1"}, "variableNames": [{"name": "size", "nodeType": "YulIdentifier", "src": "2920:4:1"}]}]}, "name": "array_allocation_size_t_string_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{"name": "length", "nodeType": "YulTypedName", "src": "2669:6:1", "type": ""}], "returnVariables": [{"name": "size", "nodeType": "YulTypedName", "src": "2680:4:1", "type": ""}], "src": "2618:332:1"}, {"body": {"nodeType": "YulBlock", "src": "3005:258:1", "statements": [{"nodeType": "YulVariableDeclaration", "src": "3015:10:1", "value": {"kind": "number", "nodeType": "YulLiteral", "src": "3024:1:1", "type": "", "value": "0"}, "variables": [{"name": "i", "nodeType": "YulTypedName", "src": "3019:1:1", "type": ""}]}, {"body": {"nodeType": "YulBlock", "src": "3084:63:1", "statements": [{"expression": {"arguments": [{"arguments": [{"name": "dst", "nodeType": "YulIdentifier", "src": "3109:3:1"}, {"name": "i", "nodeType": "YulIdentifier", "src": "3114:1:1"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "3105:3:1"}, "nodeType": "YulFunctionCall", "src": "3105:11:1"}, {"arguments": [{"arguments": [{"name": "src", "nodeType": "YulIdentifier", "src": "3128:3:1"}, {"name": "i", "nodeType": "YulIdentifier", "src": "3133:1:1"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "3124:3:1"}, "nodeType": "YulFunctionCall", "src": "3124:11:1"}], "functionName": {"name": "mload", "nodeType": "YulIdentifier", "src": "3118:5:1"}, "nodeType": "YulFunctionCall", "src": "3118:18:1"}], "functionName": {"name": "mstore", "nodeType": "YulIdentifier", "src": "3098:6:1"}, "nodeType": "YulFunctionCall", "src": "3098:39:1"}, "nodeType": "YulExpressionStatement", "src": "3098:39:1"}]}, "condition": {"arguments": [{"name": "i", "nodeType": "YulIdentifier", "src": "3045:1:1"}, {"name": "length", "nodeType": "YulIdentifier", "src": "3048:6:1"}], "functionName": {"name": "lt", "nodeType": "YulIdentifier", "src": "3042:2:1"}, "nodeType": "YulFunctionCall", "src": "3042:13:1"}, "nodeType": "YulForLoop", "post": {"nodeType": "YulBlock", "src": "3056:19:1", "statements": [{"nodeType": "YulAssignment", "src": "3058:15:1", "value": {"arguments": [{"name": "i", "nodeType": "YulIdentifier", "src": "3067:1:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "3070:2:1", "type": "", "value": "32"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "3063:3:1"}, "nodeType": "YulFunctionCall", "src": "3063:10:1"}, "variableNames": [{"name": "i", "nodeType": "YulIdentifier", "src": "3058:1:1"}]}]}, "pre": {"nodeType": "YulBlock", "src": "3038:3:1", "statements": []}, "src": "3034:113:1"}, {"body": {"nodeType": "YulBlock", "src": "3181:76:1", "statements": [{"expression": {"arguments": [{"arguments": [{"name": "dst", "nodeType": "YulIdentifier", "src": "3231:3:1"}, {"name": "length", "nodeType": "YulIdentifier", "src": "3236:6:1"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "3227:3:1"}, "nodeType": "YulFunctionCall", "src": "3227:16:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "3245:1:1", "type": "", "value": "0"}], "functionName": {"name": "mstore", "nodeType": "YulIdentifier", "src": "3220:6:1"}, "nodeType": "YulFunctionCall", "src": "3220:27:1"}, "nodeType": "YulExpressionStatement", "src": "3220:27:1"}]}, "condition": {"arguments": [{"name": "i", "nodeType": "YulIdentifier", "src": "3162:1:1"}, {"name": "length", "nodeType": "YulIdentifier", "src": "3165:6:1"}], "functionName": {"name": "gt", "nodeType": "YulIdentifier", "src": "3159:2:1"}, "nodeType": "YulFunctionCall", "src": "3159:13:1"}, "nodeType": "YulIf", "src": "3156:2:1"}]}, "name": "copy_memory_to_memory", "nodeType": "YulFunctionDefinition", "parameters": [{"name": "src", "nodeType": "YulTypedName", "src": "2987:3:1", "type": ""}, {"name": "dst", "nodeType": "YulTypedName", "src": "2992:3:1", "type": ""}, {"name": "length", "nodeType": "YulTypedName", "src": "2997:6:1", "type": ""}], "src": "2956:307:1"}, {"body": {"nodeType": "YulBlock", "src": "3320:269:1", "statements": [{"nodeType": "YulAssignment", "src": "3330:22:1", "value": {"arguments": [{"name": "data", "nodeType": "YulIdentifier", "src": "3344:4:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "3350:1:1", "type": "", "value": "2"}], "functionName": {"name": "div", "nodeType": "YulIdentifier", "src": "3340:3:1"}, "nodeType": "YulFunctionCall", "src": "3340:12:1"}, "variableNames": [{"name": "length", "nodeType": "YulIdentifier", "src": "3330:6:1"}]}, {"nodeType": "YulVariableDeclaration", "src": "3361:38:1", "value": {"arguments": [{"name": "data", "nodeType": "YulIdentifier", "src": "3391:4:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "3397:1:1", "type": "", "value": "1"}], "functionName": {"name": "and", "nodeType": "YulIdentifier", "src": "3387:3:1"}, "nodeType": "YulFunctionCall", "src": "3387:12:1"}, "variables": [{"name": "outOfPlaceEncoding", "nodeType": "YulTypedName", "src": "3365:18:1", "type": ""}]}, {"body": {"nodeType": "YulBlock", "src": "3438:51:1", "statements": [{"nodeType": "YulAssignment", "src": "3452:27:1", "value": {"arguments": [{"name": "length", "nodeType": "YulIdentifier", "src": "3466:6:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "3474:4:1", "type": "", "value": "0x7f"}], "functionName": {"name": "and", "nodeType": "YulIdentifier", "src": "3462:3:1"}, "nodeType": "YulFunctionCall", "src": "3462:17:1"}, "variableNames": [{"name": "length", "nodeType": "YulIdentifier", "src": "3452:6:1"}]}]}, "condition": {"arguments": [{"name": "outOfPlaceEncoding", "nodeType": "YulIdentifier", "src": "3418:18:1"}], "functionName": {"name": "iszero", "nodeType": "YulIdentifier", "src": "3411:6:1"}, "nodeType": "YulFunctionCall", "src": "3411:26:1"}, "nodeType": "YulIf", "src": "3408:2:1"}, {"body": {"nodeType": "YulBlock", "src": "3541:42:1", "statements": [{"expression": {"arguments": [], "functionName": {"name": "panic_error_0x22", "nodeType": "YulIdentifier", "src": "3555:16:1"}, "nodeType": "YulFunctionCall", "src": "3555:18:1"}, "nodeType": "YulExpressionStatement", "src": "3555:18:1"}]}, "condition": {"arguments": [{"name": "outOfPlaceEncoding", "nodeType": "YulIdentifier", "src": "3505:18:1"}, {"arguments": [{"name": "length", "nodeType": "YulIdentifier", "src": "3528:6:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "3536:2:1", "type": "", "value": "32"}], "functionName": {"name": "lt", "nodeType": "YulIdentifier", "src": "3525:2:1"}, "nodeType": "YulFunctionCall", "src": "3525:14:1"}], "functionName": {"name": "eq", "nodeType": "YulIdentifier", "src": "3502:2:1"}, "nodeType": "YulFunctionCall", "src": "3502:38:1"}, "nodeType": "YulIf", "src": "3499:2:1"}]}, "name": "extract_byte_array_length", "nodeType": "YulFunctionDefinition", "parameters": [{"name": "data", "nodeType": "YulTypedName", "src": "3304:4:1", "type": ""}], "returnVariables": [{"name": "length", "nodeType": "YulTypedName", "src": "3313:6:1", "type": ""}], "src": "3269:320:1"}, {"body": {"nodeType": "YulBlock", "src": "3623:152:1", "statements": [{"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "3640:1:1", "type": "", "value": "0"}, {"kind": "number", "nodeType": "YulLiteral", "src": "3643:77:1", "type": "", "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"}], "functionName": {"name": "mstore", "nodeType": "YulIdentifier", "src": "3633:6:1"}, "nodeType": "YulFunctionCall", "src": "3633:88:1"}, "nodeType": "YulExpressionStatement", "src": "3633:88:1"}, {"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "3737:1:1", "type": "", "value": "4"}, {"kind": "number", "nodeType": "YulLiteral", "src": "3740:4:1", "type": "", "value": "0x22"}], "functionName": {"name": "mstore", "nodeType": "YulIdentifier", "src": "3730:6:1"}, "nodeType": "YulFunctionCall", "src": "3730:15:1"}, "nodeType": "YulExpressionStatement", "src": "3730:15:1"}, {"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "3761:1:1", "type": "", "value": "0"}, {"kind": "number", "nodeType": "YulLiteral", "src": "3764:4:1", "type": "", "value": "0x24"}], "functionName": {"name": "revert", "nodeType": "YulIdentifier", "src": "3754:6:1"}, "nodeType": "YulFunctionCall", "src": "3754:15:1"}, "nodeType": "YulExpressionStatement", "src": "3754:15:1"}]}, "name": "panic_error_0x22", "nodeType": "YulFunctionDefinition", "src": "3595:180:1"}, {"body": {"nodeType": "YulBlock", "src": "3809:152:1", "statements": [{"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "3826:1:1", "type": "", "value": "0"}, {"kind": "number", "nodeType": "YulLiteral", "src": "3829:77:1", "type": "", "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"}], "functionName": {"name": "mstore", "nodeType": "YulIdentifier", "src": "3819:6:1"}, "nodeType": "YulFunctionCall", "src": "3819:88:1"}, "nodeType": "YulExpressionStatement", "src": "3819:88:1"}, {"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "3923:1:1", "type": "", "value": "4"}, {"kind": "number", "nodeType": "YulLiteral", "src": "3926:4:1", "type": "", "value": "0x41"}], "functionName": {"name": "mstore", "nodeType": "YulIdentifier", "src": "3916:6:1"}, "nodeType": "YulFunctionCall", "src": "3916:15:1"}, "nodeType": "YulExpressionStatement", "src": "3916:15:1"}, {"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "3947:1:1", "type": "", "value": "0"}, {"kind": "number", "nodeType": "YulLiteral", "src": "3950:4:1", "type": "", "value": "0x24"}], "functionName": {"name": "revert", "nodeType": "YulIdentifier", "src": "3940:6:1"}, "nodeType": "YulFunctionCall", "src": "3940:15:1"}, "nodeType": "YulExpressionStatement", "src": "3940:15:1"}]}, "name": "panic_error_0x41", "nodeType": "YulFunctionDefinition", "src": "3781:180:1"}]}, "contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_bytes_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n}\n", "id": 1, "language": "Yul", "name": "#utility.yul"}], "linkReferences": {}, "object": "60806040523480156200001157600080fd5b5060405162000ba538038062000ba583398181016040528101906200003791906200029b565b80600060010190805190602001906200005292919062000076565b50816000800190805190602001906200006d92919062000107565b50505062000472565b8280546200008490620003de565b90600052602060002090601f016020900481019282620000a85760008555620000f4565b82601f10620000c357805160ff1916838001178555620000f4565b82800160010185558215620000f4579182015b82811115620000f3578251825591602001919060010190620000d6565b5b50905062000103919062000198565b5090565b8280546200011590620003de565b90600052602060002090601f01602090048101928262000139576000855562000185565b82601f106200015457805160ff191683800117855562000185565b8280016001018555821562000185579182015b828111156200018457825182559160200191906001019062000167565b5b50905062000194919062000198565b5090565b5b80821115620001b357600081600090555060010162000199565b5090565b6000620001ce620001c88462000342565b6200030e565b905082815260208101848484011115620001e757600080fd5b620001f4848285620003a8565b509392505050565b6000620002136200020d8462000375565b6200030e565b9050828152602081018484840111156200022c57600080fd5b62000239848285620003a8565b509392505050565b600082601f8301126200025357600080fd5b815162000265848260208601620001b7565b91505092915050565b600082601f8301126200028057600080fd5b815162000292848260208601620001fc565b91505092915050565b60008060408385031215620002af57600080fd5b600083015167ffffffffffffffff811115620002ca57600080fd5b620002d88582860162000241565b925050602083015167ffffffffffffffff811115620002f657600080fd5b62000304858286016200026e565b9150509250929050565b6000604051905081810181811067ffffffffffffffff8211171562000338576200033762000443565b5b8060405250919050565b600067ffffffffffffffff82111562000360576200035f62000443565b5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111562000393576200039262000443565b5b601f19601f8301169050602081019050919050565b60005b83811015620003c8578082015181840152602081019050620003ab565b83811115620003d8576000848401525b50505050565b60006002820490506001821680620003f757607f821691505b602082108114156200040e576200040d62000414565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61072380620004826000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063a7a0d4181461003b578063ee340c7414610059575b600080fd5b610043610075565b604051610050919061051f565b60405180910390f35b610073600480360381019061006e91906103fd565b6101b3565b005b61007d6101ea565b600060405180604001604052908160008201805461009a9061064c565b80601f01602080910402602001604051908101604052809291908181526020018280546100c69061064c565b80156101135780601f106100e857610100808354040283529160200191610113565b820191906000526020600020905b8154815290600101906020018083116100f657829003601f168201915b5050505050815260200160018201805461012c9061064c565b80601f01602080910402602001604051908101604052809291908181526020018280546101589061064c565b80156101a55780601f1061017a576101008083540402835291602001916101a5565b820191906000526020600020905b81548152906001019060200180831161018857829003601f168201915b505050505081525050905090565b816000800190805190602001906101cb929190610204565b5080600060010190805190602001906101e592919061028a565b505050565b604051806040016040528060608152602001606081525090565b8280546102109061064c565b90600052602060002090601f0160209004810192826102325760008555610279565b82601f1061024b57805160ff1916838001178555610279565b82800160010185558215610279579182015b8281111561027857825182559160200191906001019061025d565b5b5090506102869190610310565b5090565b8280546102969061064c565b90600052602060002090601f0160209004810192826102b857600085556102ff565b82601f106102d157805160ff19168380011785556102ff565b828001600101855582156102ff579182015b828111156102fe5782518255916020019190600101906102e3565b5b50905061030c9190610310565b5090565b5b80821115610329576000816000905550600101610311565b5090565b600061034061033b84610572565b610541565b90508281526020810184848401111561035857600080fd5b61036384828561060a565b509392505050565b600061037e610379846105a2565b610541565b90508281526020810184848401111561039657600080fd5b6103a184828561060a565b509392505050565b600082601f8301126103ba57600080fd5b81356103ca84826020860161032d565b91505092915050565b600082601f8301126103e457600080fd5b81356103f484826020860161036b565b91505092915050565b6000806040838503121561041057600080fd5b600083013567ffffffffffffffff81111561042a57600080fd5b610436858286016103a9565b925050602083013567ffffffffffffffff81111561045357600080fd5b61045f858286016103d3565b9150509250929050565b6000610474826105d2565b61047e81856105e8565b935061048e818560208601610619565b610497816106dc565b840191505092915050565b60006104ad826105dd565b6104b781856105f9565b93506104c7818560208601610619565b6104d0816106dc565b840191505092915050565b600060408301600083015184820360008601526104f88282610469565b9150506020830151848203602086015261051282826104a2565b9150508091505092915050565b6000602082019050818103600083015261053981846104db565b905092915050565b6000604051905081810181811067ffffffffffffffff82111715610568576105676106ad565b5b8060405250919050565b600067ffffffffffffffff82111561058d5761058c6106ad565b5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156105bd576105bc6106ad565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b82818337600083830152505050565b60005b8381101561063757808201518184015260208101905061061c565b83811115610646576000848401525b50505050565b6000600282049050600182168061066457607f821691505b602082108114156106785761067761067e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f830116905091905056fea264697066735822122065a53845976be15c4625619206a91a2b908ad2b082df2cffd6cb5ae618db853e64736f6c63430008000033", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xBA5 CODESIZE SUB DUP1 PUSH3 0xBA5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x29B JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x52 SWAP3 SWAP2 SWAP1 PUSH3 0x76 JUMP JUMPDEST POP DUP2 PUSH1 0x0 DUP1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x6D SWAP3 SWAP2 SWAP1 PUSH3 0x107 JUMP JUMPDEST POP POP POP PUSH3 0x472 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x84 SWAP1 PUSH3 0x3DE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA8 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xF4 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xC3 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xF4 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xF4 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xF3 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD6 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x103 SWAP2 SWAP1 PUSH3 0x198 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x115 SWAP1 PUSH3 0x3DE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x139 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x185 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x154 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x185 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x185 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x184 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x167 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x194 SWAP2 SWAP1 PUSH3 0x198 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1B3 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x199 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1CE PUSH3 0x1C8 DUP5 PUSH3 0x342 JUMP JUMPDEST PUSH3 0x30E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1F4 DUP5 DUP3 DUP6 PUSH3 0x3A8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x213 PUSH3 0x20D DUP5 PUSH3 0x375 JUMP JUMPDEST PUSH3 0x30E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x239 DUP5 DUP3 DUP6 PUSH3 0x3A8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x265 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x1B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x292 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x1FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x2D8 DUP6 DUP3 DUP7 ADD PUSH3 0x241 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x304 DUP6 DUP3 DUP7 ADD PUSH3 0x26E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x338 JUMPI PUSH3 0x337 PUSH3 0x443 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x360 JUMPI PUSH3 0x35F PUSH3 0x443 JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x393 JUMPI PUSH3 0x392 PUSH3 0x443 JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x3C8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x3AB JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x3D8 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x3F7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x40E JUMPI PUSH3 0x40D PUSH3 0x414 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x723 DUP1 PUSH3 0x482 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA7A0D418 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xEE340C74 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x51F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x3FD JUMP JUMPDEST PUSH2 0x1B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7D PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x9A SWAP1 PUSH2 0x64C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC6 SWAP1 PUSH2 0x64C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x113 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x113 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x12C SWAP1 PUSH2 0x64C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x158 SWAP1 PUSH2 0x64C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x188 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1CB SWAP3 SWAP2 SWAP1 PUSH2 0x204 JUMP JUMPDEST POP DUP1 PUSH1 0x0 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1E5 SWAP3 SWAP2 SWAP1 PUSH2 0x28A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x210 SWAP1 PUSH2 0x64C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x232 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x279 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x24B JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x279 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x279 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x278 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x25D JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x310 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x296 SWAP1 PUSH2 0x64C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2FF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x2D1 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2FF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2FF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2FE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2E3 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x310 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x311 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x340 PUSH2 0x33B DUP5 PUSH2 0x572 JUMP JUMPDEST PUSH2 0x541 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x363 DUP5 DUP3 DUP6 PUSH2 0x60A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37E PUSH2 0x379 DUP5 PUSH2 0x5A2 JUMP JUMPDEST PUSH2 0x541 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A1 DUP5 DUP3 DUP6 PUSH2 0x60A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3CA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x32D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3F4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x36B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x436 DUP6 DUP3 DUP7 ADD PUSH2 0x3A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x45F DUP6 DUP3 DUP7 ADD PUSH2 0x3D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x474 DUP3 PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x47E DUP2 DUP6 PUSH2 0x5E8 JUMP JUMPDEST SWAP4 POP PUSH2 0x48E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x619 JUMP JUMPDEST PUSH2 0x497 DUP2 PUSH2 0x6DC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AD DUP3 PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x4B7 DUP2 DUP6 PUSH2 0x5F9 JUMP JUMPDEST SWAP4 POP PUSH2 0x4C7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x619 JUMP JUMPDEST PUSH2 0x4D0 DUP2 PUSH2 0x6DC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x4F8 DUP3 DUP3 PUSH2 0x469 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x512 DUP3 DUP3 PUSH2 0x4A2 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x539 DUP2 DUP5 PUSH2 0x4DB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x568 JUMPI PUSH2 0x567 PUSH2 0x6AD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x58D JUMPI PUSH2 0x58C PUSH2 0x6AD JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x5BD JUMPI PUSH2 0x5BC PUSH2 0x6AD JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x637 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x61C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x646 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x664 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x678 JUMPI PUSH2 0x677 PUSH2 0x67E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0xA53845976BE1 0x5C CHAINID 0x25 PUSH2 0x9206 0xA9 BYTE 0x2B SWAP1 DUP11 0xD2 0xB0 DUP3 0xDF 0x2C SELFDESTRUCT 0xD6 0xCB GAS 0xE6 XOR 0xDB DUP6 RETURNDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ", "sourceMap": "25:2607:0:-:0;;;1753:790;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2483:19;2456:5;:24;;:46;;;;;;;;;;;;:::i;:::-;;2526:10;2508:5;:15;;:28;;;;;;;;;;;;:::i;:::-;;1753:790;;25:2607;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:351:1:-;;120:64;135:48;176:6;135:48;:::i;:::-;120:64;:::i;:::-;111:73;;207:6;200:5;193:21;245:4;238:5;234:16;283:3;274:6;269:3;265:16;262:25;259:2;;;300:1;297;290:12;259:2;313:39;345:6;340:3;335;313:39;:::i;:::-;101:257;;;;;;:::o;364:353::-;;478:65;493:49;535:6;493:49;:::i;:::-;478:65;:::i;:::-;469:74;;566:6;559:5;552:21;604:4;597:5;593:16;642:3;633:6;628:3;624:16;621:25;618:2;;;659:1;656;649:12;618:2;672:39;704:6;699:3;694;672:39;:::i;:::-;459:258;;;;;;:::o;736:286::-;;851:3;844:4;836:6;832:17;828:27;818:2;;869:1;866;859:12;818:2;902:6;896:13;927:89;1012:3;1004:6;997:4;989:6;985:17;927:89;:::i;:::-;918:98;;808:214;;;;;:::o;1042:288::-;;1158:3;1151:4;1143:6;1139:17;1135:27;1125:2;;1176:1;1173;1166:12;1125:2;1209:6;1203:13;1234:90;1320:3;1312:6;1305:4;1297:6;1293:17;1234:90;:::i;:::-;1225:99;;1115:215;;;;;:::o;1336:650::-;;;1491:2;1479:9;1470:7;1466:23;1462:32;1459:2;;;1507:1;1504;1497:12;1459:2;1571:1;1560:9;1556:17;1550:24;1601:18;1593:6;1590:30;1587:2;;;1633:1;1630;1623:12;1587:2;1661:73;1726:7;1717:6;1706:9;1702:22;1661:73;:::i;:::-;1651:83;;1521:223;1804:2;1793:9;1789:18;1783:25;1835:18;1827:6;1824:30;1821:2;;;1867:1;1864;1857:12;1821:2;1895:74;1961:7;1952:6;1941:9;1937:22;1895:74;:::i;:::-;1885:84;;1754:225;1449:537;;;;;:::o;1992:283::-;;2058:2;2052:9;2042:19;;2100:4;2092:6;2088:17;2207:6;2195:10;2192:22;2171:18;2159:10;2156:34;2153:62;2150:2;;;2218:18;;:::i;:::-;2150:2;2258:10;2254:2;2247:22;2032:243;;;;:::o;2281:331::-;;2432:18;2424:6;2421:30;2418:2;;;2454:18;;:::i;:::-;2418:2;2539:4;2535:9;2528:4;2520:6;2516:17;2512:33;2504:41;;2600:4;2594;2590:15;2582:23;;2347:265;;;:::o;2618:332::-;;2770:18;2762:6;2759:30;2756:2;;;2792:18;;:::i;:::-;2756:2;2877:4;2873:9;2866:4;2858:6;2854:17;2850:33;2842:41;;2938:4;2932;2928:15;2920:23;;2685:265;;;:::o;2956:307::-;3024:1;3034:113;3048:6;3045:1;3042:13;3034:113;;;3133:1;3128:3;3124:11;3118:18;3114:1;3109:3;3105:11;3098:39;3070:2;3067:1;3063:10;3058:15;;3034:113;;;3165:6;3162:1;3159:13;3156:2;;;3245:1;3236:6;3231:3;3227:16;3220:27;3156:2;3005:258;;;;:::o;3269:320::-;;3350:1;3344:4;3340:12;3330:22;;3397:1;3391:4;3387:12;3418:18;3408:2;;3474:4;3466:6;3462:17;3452:27;;3408:2;3536;3528:6;3525:14;3505:18;3502:38;3499:2;;;3555:18;;:::i;:::-;3499:2;3320:269;;;;:::o;3595:180::-;3643:77;3640:1;3633:88;3740:4;3737:1;3730:15;3764:4;3761:1;3754:15;3781:180;3829:77;3826:1;3819:88;3926:4;3923:1;3916:15;3950:4;3947:1;3940:15;25:2607:0;;;;;;;"}}, "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_visitData\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_previousRecordHash\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"readRecord\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"visitData\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"previousRecordHash\",\"type\":\"string\"}],\"internalType\":\"struct VisitRecord.Visit\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_visitData\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_previousRecordHash\",\"type\":\"string\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VisitRecord.sol\":\"VisitRecord\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"VisitRecord.sol\":{\"keccak256\":\"0xb7741a97a63fa57c7978c7b4cd0df304383974d2acf210781295a8c2a926bce0\",\"urls\":[\"bzz-raw://2c47d7ad07bc22309dccddf54051d56738207ec3e06a85ae2de8c992547f054b\",\"dweb:/ipfs/QmfJzwHf1deiXRY1YhwBbHotHDwn2ivfongwfmSGWAyFZN\"]}},\"version\":1}"}}}, "errors": [{"component": "general", "errorCode": "1878", "formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> VisitRecord.sol\n\n", "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.", "severity": "warning", "sourceLocation": {"end": -1, "file": "VisitRecord.sol", "start": -1}, "type": "Warning"}], "sources": {"VisitRecord.sol": {"id": 0}}}